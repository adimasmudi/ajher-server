definitions:
  answer.Answer:
    properties:
      answer:
        type: string
      answer_duration:
        type: integer
      created_at:
        type: string
      generated_suggestion:
        type: string
      grade:
        type: number
      id:
        type: string
      label:
        type: string
      question_id:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  controllers.TokenObject:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  otp.VerifyOtpInput:
    properties:
      otp_code:
        type: string
    type: object
  question.Question:
    properties:
      answer:
        items:
          $ref: '#/definitions/answer.Answer'
        type: array
      created_at:
        type: string
      duration:
        type: integer
      grade_percentage:
        type: number
      id:
        type: string
      point:
        type: number
      question:
        type: string
      questionImage:
        items:
          $ref: '#/definitions/questionImage.QuestionImage'
        type: array
      quiz_id:
        type: string
      reference_answer:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  questionImage.QuestionImage:
    properties:
      created_at:
        type: string
      id:
        type: string
      image_path:
        type: string
      question_id:
        type: string
      updated_at:
        type: string
    type: object
  quiz.CreateQuizInput:
    properties:
      description:
        type: string
      quiz_category_id:
        type: integer
      title:
        type: string
    type: object
  quiz.Quiz:
    properties:
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      duration:
        type: integer
      end_at:
        type: string
      id:
        type: string
      question:
        $ref: '#/definitions/question.Question'
      quiz_category_id:
        type: integer
      quizCategory:
        $ref: '#/definitions/quizCategory.QuizCategory'
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  quizCategory.QuizCategory:
    properties:
      category_name:
        type: string
      created_at:
        type: string
      description:
        type: string
      icon:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    type: object
  quizCategory.QuizCategoryInput:
    properties:
      category_name:
        type: string
      description:
        type: string
    type: object
  user.ChangePasswordUserInput:
    properties:
      change_password:
        type: string
      otp_code:
        type: string
      password:
        type: string
    type: object
  user.GoogleOAuthInput:
    properties:
      oAuthAccessToken:
        type: string
    required:
    - oAuthAccessToken
    type: object
  user.LoginUserInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user.RefreshTokenInput:
    properties:
      accessToken:
        type: string
    required:
    - accessToken
    type: object
  user.RegisterUserInput:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - confirmPassword
    - email
    - password
    - username
    type: object
  user.ResetPasswordInput:
    properties:
      email:
        type: string
    type: object
  user.User:
    properties:
      ID:
        type: integer
      created_at:
        type: string
      email:
        type: string
      fullName:
        type: string
      gender:
        type: string
      last_login:
        type: string
      password:
        type: string
      picture:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /quiz/save:
    post:
      consumes:
      - application/json
      description: Adding new quiz to the database
      parameters:
      - default: Bearer <Add refresh token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Data
        in: body
        name: createQuizInput
        required: true
        schema:
          $ref: '#/definitions/quiz.CreateQuizInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quiz.Quiz'
      summary: save quiz
      tags:
      - Quiz
  /quizCategory:
    get:
      consumes:
      - application/json
      description: Get all quiz category
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quizCategory.QuizCategory'
      summary: get all quiz category
      tags:
      - Quiz Category
  /quizCategory/{id}:
    get:
      consumes:
      - application/json
      description: Get quiz category by id
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Quiz Category Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quizCategory.QuizCategory'
      summary: get quiz category by id
      tags:
      - Quiz Category
  /quizCategory/save:
    post:
      consumes:
      - application/json
      description: Adding new quiz category to the database
      parameters:
      - default: Bearer <Add refresh token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Data
        in: body
        name: quizCategoryInput
        required: true
        schema:
          $ref: '#/definitions/quizCategory.QuizCategoryInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/quizCategory.QuizCategory'
      summary: save quiz category
      tags:
      - Quiz Category
  /user/changePassword:
    post:
      consumes:
      - application/json
      description: Change Password user
      parameters:
      - description: User Data
        in: body
        name: changePasswordInput
        required: true
        schema:
          $ref: '#/definitions/user.ChangePasswordUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenObject'
      summary: change password
      tags:
      - User Authentication
  /user/googleAuth:
    post:
      consumes:
      - application/json
      description: Google Auth
      parameters:
      - description: User Data
        in: body
        name: googleOAuthInput
        required: true
        schema:
          $ref: '#/definitions/user.GoogleOAuthInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenObject'
      summary: google auth
      tags:
      - User Authentication
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User Data
        in: body
        name: loginUserInput
        required: true
        schema:
          $ref: '#/definitions/user.LoginUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenObject'
      summary: login
      tags:
      - User Authentication
  /user/profile:
    get:
      consumes:
      - application/json
      description: Get user profile
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      summary: get profile
      tags:
      - User Authentication
  /user/refreshToken:
    post:
      consumes:
      - application/json
      description: Refresh JWT token
      parameters:
      - default: Bearer <Add refresh token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User Data
        in: body
        name: refreshTokenInput
        required: true
        schema:
          $ref: '#/definitions/user.RefreshTokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenObject'
      summary: refresh token
      tags:
      - User Authentication
  /user/register:
    post:
      consumes:
      - application/json
      description: Adding new user to the database
      parameters:
      - description: User Data
        in: body
        name: registerUserInput
        required: true
        schema:
          $ref: '#/definitions/user.RegisterUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenObject'
      summary: register
      tags:
      - User Authentication
  /user/resetPassword:
    post:
      consumes:
      - application/json
      description: Send email consist of OTP to user
      parameters:
      - description: User Data
        in: body
        name: resetPasswordInput
        required: true
        schema:
          $ref: '#/definitions/user.ResetPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenObject'
      summary: reset password
      tags:
      - User Authentication
  /user/validateToken:
    get:
      consumes:
      - application/json
      description: Validate JWT token
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenObject'
      summary: validate token
      tags:
      - User Authentication
  /user/verifyOtp:
    post:
      consumes:
      - application/json
      description: Verify OTP user
      parameters:
      - description: User Data
        in: body
        name: verifyOtpInput
        required: true
        schema:
          $ref: '#/definitions/otp.VerifyOtpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenObject'
      summary: verify otp
      tags:
      - User Authentication
swagger: "2.0"
